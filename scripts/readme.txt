These are the "source" of the scripts passed inline as
binary blobs (base64 encoded) to the custom script extension 
within the different templates.

The benefit to inline them is that they do not have
a need for a URL or other storage place where they get fetched from.

Example:

"customData": "IyEvYmluL2Jhc2gKCmZ1bmN0aW9uIGxvZygpCnsKICBtZXNzYWdlPSRACiAgZWNobyAiJG1lc3NhZ2UiCiAgZWNobyAiJG1lc3NhZ2UiID4+IC92YXIvbG9nL3NhcGNvbmZpZ2NyZWF0ZQp9CgpmdW5jdGlvbiBhZGR0b2ZzdGFiKCkKewogIGxvZyAiYWRkdG9mc3RhYiIKICBwYXJ0UGF0aD0kMQogIG1vdW50PSQyCiAgCiAgbG9jYWwgYmxraWQ9JCgvc2Jpbi9ibGtpZCAkcGFydFBhdGgpCiAgCiAgaWYgW1sgJGJsa2lkID1+ICBVVUlEPVwiKC57MzZ9KVwiIF1dCiAgdGhlbgogIAogICAgbG9nICJBZGRpbmcgZnN0YWIgZW50cnkiCiAgICBsb2NhbCB1dWlkPSR7QkFTSF9SRU1BVENIWzFdfTsKICAgIGxvY2FsIG1vdW50Q21kPSIiCiAgICBsb2cgImFkZGluZyBmc3RhYiBlbnRyeSIKICAgIG1vdW50Q21kPSIvZGV2L2Rpc2svYnktdXVpZC8kdXVpZCAkbW91bnQgeGZzICBkZWZhdWx0cyxub2ZhaWwgIDAgIDIiCiAgICBlY2hvICIkbW91bnRDbWQiID4+IC9ldGMvZnN0YWIKICAgICQobW91bnQgJHBhcnRQYXRoICRtb3VudCkKICAKICBlbHNlCiAgICBsb2cgIm5vIFVVSUQgZm91bmQiCiAgICBleGl0IC0xOwogIGZpCiAgCiAgbG9nICJhZGR0b2ZzdGFiIGRvbmUiCn0KCmZ1bmN0aW9uIGdldGRldmljZXBhdGgoKQp7CgogIGxvZyAiZ2V0ZGV2aWNlcGF0aCIKICBnZXRkZXZpY2VwYXRocmVzdWx0PSIiCiAgbG9jYWwgbHVuPSQxCiAgbG9jYWwgcmVhZGxpbmtPdXRwdXQ9JChyZWFkbGluayAvZGV2L2Rpc2svYXp1cmUvc2NzaTEvbHVuJGx1bikKICBsb2NhbCBzY3NpT3V0cHV0PSQobHNzY3NpKQogIGlmIFtbICRyZWFkbGlua091dHB1dCA9fiAoc2RbYS16QS1aXXsxLDJ9KSBdXTsKICB0aGVuCiAgICBsb2cgImZvdW5kIGRldmljZSBwYXRoIHVzaW5nIHJlYWRsaW5rIgogICAgZ2V0ZGV2aWNlcGF0aHJlc3VsdD0iL2Rldi8ke0JBU0hfUkVNQVRDSFsxXX0iOwogIGVsaWYgW1sgJHNjc2lPdXRwdXQgPX4gXFs1OjA6MDokbHVuXF1bXlxbXSooL2Rldi9zZFthLXpBLVpdezEsMn0pIF1dOwogIHRoZW4KICAgIGxvZyAiZm91bmQgZGV2aWNlIHBhdGggdXNpbmcgbHNzY3NpIgogICAgZ2V0ZGV2aWNlcGF0aHJlc3VsdD0ke0JBU0hfUkVNQVRDSFsxXX07CiAgZWxzZQogICAgbG9nICJsc3Njc2kgb3V0cHV0IG5vdCBhcyBleHBlY3RlZCBmb3IgJGx1biIKICAgIGV4aXQgLTE7CiAgZmkKICBsb2cgImdldGRldmljZXBhdGggZG9uZSIKCn0KCmZ1bmN0aW9uIGNyZWF0ZWx2bSgpCnsKICAKICBsb2cgImNyZWF0ZWx2bSIKCiAgbG9jYWwgbHVuc0E9KCR7MS8vLC8gfSkKICBsb2NhbCB2Z05hbWU9JDIKICBsb2NhbCBsdk5hbWU9JDMKICBsb2NhbCBtb3VudFBhdGhBPSgkezQvLywvIH0pCiAgbG9jYWwgc2l6ZUE9KCR7NS8vLC8gfSkKCiAgbG9jYWwgbHVuc0NvdW50PSR7I2x1bnNBW0BdfQogIGxvY2FsIG1vdW50UGF0aENvdW50PSR7I21vdW50UGF0aEFbQF19CiAgbG9jYWwgc2l6ZUNvdW50PSR7I3NpemVBW0BdfQogIGxvZyAiY291bnQgJGx1bnNDb3VudCAkbW91bnRQYXRoQ291bnQgJHNpemVDb3VudCIKICBpZiBbWyAkbHVuc0NvdW50IC1ndCAxIF1dCiAgdGhlbgogICAgbG9nICJjcmVhdGVsdm0gLSBjcmVhdGluZyBsdm0iCgogICAgbG9jYWwgbnVtUmFpZERldmljZXM9MAogICAgbG9jYWwgcmFpZERldmljZXM9IiIKICAgIGxvZyAibnVtIGx1bnMgJGx1bnNDb3VudCIKICAgIAogICAgZm9yICgoaT0wOyBpPGx1bnNDb3VudDsgaSsrKSkKICAgIGRvCiAgICAgIGxvZyAidHJ5aW5nIHRvIGZpbmQgZGV2aWNlIHBhdGgiCiAgICAgIGxvY2FsIGx1bj0ke2x1bnNBWyRpXX0KICAgICAgZ2V0ZGV2aWNlcGF0aCAkbHVuCiAgICAgIGxvY2FsIGRldmljZVBhdGg9JGdldGRldmljZXBhdGhyZXN1bHQ7CiAgICAgIAogICAgICBpZiBbIC1uICIkZGV2aWNlUGF0aCIgXTsKICAgICAgdGhlbgogICAgICAgIGxvZyAiIERldmljZSBQYXRoIGlzICRkZXZpY2VQYXRoIgogICAgICAgIG51bVJhaWREZXZpY2VzPSQoKG51bVJhaWREZXZpY2VzICsgMSkpCiAgICAgICAgcmFpZERldmljZXM9IiRyYWlkRGV2aWNlcyAkZGV2aWNlUGF0aCAiCiAgICAgIGVsc2UKICAgICAgICBsb2cgIm5vIGRldmljZSBwYXRoIGZvciBMVU4gJGx1biIKICAgICAgICBleGl0IC0xOwogICAgICBmaQogICAgZG9uZQoKICAgIGxvZyAibnVtOiAkbnVtUmFpZERldmljZXMgcGF0aHM6ICckcmFpZERldmljZXMnIgogICAgJChwdmNyZWF0ZSAkcmFpZERldmljZXMpCiAgICAkKHZnY3JlYXRlICR2Z05hbWUgJHJhaWREZXZpY2VzKQoKICAgIGZvciAoKGo9MDsgajxtb3VudFBhdGhDb3VudDsgaisrKSkKICAgIGRvCiAgICAgIGxvY2FsIG1vdW50UGF0aExvYz0ke21vdW50UGF0aEFbJGpdfQogICAgICBsb2NhbCBzaXplTG9jPSR7c2l6ZUFbJGpdfQogICAgICBsb2NhbCBsdk5hbWVMb2M9IiRsdk5hbWUtJGoiCiAgICAgICQobHZjcmVhdGUgLS1leHRlbnRzICRzaXplTG9jJUZSRUUgLS1zdHJpcGVzICRudW1SYWlkRGV2aWNlcyAtLW5hbWUgJGx2TmFtZUxvYyAkdmdOYW1lKQogICAgICAkKG1rZnMgLXQgeGZzIC9kZXYvJHZnTmFtZS8kbHZOYW1lTG9jKQogICAgICAkKG1rZGlyIC1wICRtb3VudFBhdGhMb2MpCiAgICAKICAgICAgYWRkdG9mc3RhYiAvZGV2LyR2Z05hbWUvJGx2TmFtZUxvYyAkbW91bnRQYXRoTG9jCiAgICBkb25lCgogIGVsc2UKICAgIGxvZyAiY3JlYXRlbHZtIC0gY3JlYXRpbmcgc2luZ2xlIGRpc2siCgogICAgbG9jYWwgbHVuPSR7bHVuc0FbMF19CiAgICBsb2NhbCBtb3VudFBhdGhMb2M9JHttb3VudFBhdGhBWzBdfQogICAgZ2V0ZGV2aWNlcGF0aCAkbHVuOwogICAgbG9jYWwgZGV2aWNlUGF0aD0kZ2V0ZGV2aWNlcGF0aHJlc3VsdDsKICAgIGlmIFsgLW4gIiRkZXZpY2VQYXRoIiBdOwogICAgdGhlbgogICAgICBsb2cgIiBEZXZpY2UgUGF0aCBpcyAkZGV2aWNlUGF0aCIKICAgICAgIyBodHRwOi8vc3VwZXJ1c2VyLmNvbS9xdWVzdGlvbnMvMzMyMjUyL2NyZWF0aW5nLWFuZC1mb3JtYXRpbmctYS1wYXJ0aXRpb24tdXNpbmctYS1iYXNoLXNjcmlwdAogICAgICAkKGVjaG8gLWUgIm5cbnBcbjFcblxuXG53IiB8IGZkaXNrICRkZXZpY2VQYXRoKSA+IC9kZXYvbnVsbAogICAgICBsb2NhbCBwYXJ0UGF0aD0iJGRldmljZVBhdGgiIjEiCiAgICAgICQobWtmcyAtdCB4ZnMgJHBhcnRQYXRoKSA+IC9kZXYvbnVsbAogICAgICAkKG1rZGlyIC1wICRtb3VudFBhdGhMb2MpCgogICAgICBhZGR0b2ZzdGFiICRwYXJ0UGF0aCAkbW91bnRQYXRoTG9jCiAgICBlbHNlCiAgICAgIGxvZyAibm8gZGV2aWNlIHBhdGggZm9yIExVTiAkbHVuIgogICAgICBleGl0IC0xOwogICAgZmkKICBmaQoKICBsb2cgImNyZWF0ZWx2bSBkb25lIgp9Cgpsb2cgJEAKCmx1bnM9IiIKbmFtZXM9IiIKcGF0aHM9IiIKc2l6ZXM9IiIKCndoaWxlIHRydWU7IApkbwogIGNhc2UgIiQxIiBpbgogICAgIi1sdW5zIikgIGx1bnM9JDI7c2hpZnQgMjtsb2cgImZvdW5kIGx1bnMiCiAgICA7OwogICAgIi1uYW1lcyIpICBuYW1lcz0kMjtzaGlmdCAyO2xvZyAiZm91bmQgbmFtZXMiCiAgICA7OwogICAgIi1wYXRocyIpICBwYXRocz0kMjtzaGlmdCAyO2xvZyAiZm91bmQgcGF0aHMiCiAgICA7OwogICAgIi1zaXplcyIpICBzaXplcz0kMjtzaGlmdCAyO2xvZyAiZm91bmQgc2l6ZXMiCiAgICA7OwogICAgKikgbG9nICJ1bmtub3duIHBhcmFtZXRlciAkMSI7c2hpZnQgMTsKICAgIDs7CiAgZXNhYwoKICBpZiBbWyAteiAiJDEiIF1dOwogIHRoZW4gCiAgICBicmVhazsgCiAgZmkKZG9uZQoKbHVuc1NwbGl0PSgke2x1bnMvLyMvIH0pCm5hbWVzU3BsaXQ9KCR7bmFtZXMvLyMvIH0pCnBhdGhzU3BsaXQ9KCR7cGF0aHMvLyMvIH0pCnNpemVzU3BsaXQ9KCR7c2l6ZXMvLyMvIH0pCgpsdW5zQ291bnQ9JHsjbHVuc1NwbGl0W0BdfQpuYW1lc0NvdW50PSR7I25hbWVzU3BsaXRbQF19CnBhdGhzQ291bnQ9JHsjcGF0aHNTcGxpdFtAXX0Kc2l6ZXNDb3VudD0keyNzaXplc1NwbGl0W0BdfQoKbG9nICJjb3VudCAkbHVuc0NvdW50ICRuYW1lc0NvdW50ICRwYXRoc0NvdW50ICRzaXplc0NvdW50IgoKaWYgW1sgJGx1bnNDb3VudCAtZXEgJG5hbWVzQ291bnQgJiYgJG5hbWVzQ291bnQgLWVxICRwYXRoc0NvdW50ICYmICRwYXRoc0NvdW50IC1lcSAkc2l6ZXNDb3VudCBdXQp0aGVuCiAgZm9yICgoaXBhcnQ9MDsgaXBhcnQ8bHVuc0NvdW50OyBpcGFydCsrKSkKICBkbwogICAgbHVuPSR7bHVuc1NwbGl0WyRpcGFydF19CiAgICBuYW1lPSR7bmFtZXNTcGxpdFskaXBhcnRdfQogICAgcGF0aD0ke3BhdGhzU3BsaXRbJGlwYXJ0XX0KICAgIHNpemU9JHtzaXplc1NwbGl0WyRpcGFydF19CgogICAgbG9nICJjcmVhdGluZyBkaXNrIHdpdGggJGx1biAkbmFtZSAkcGF0aCAkc2l6ZSIKICAgIGNyZWF0ZWx2bSAkbHVuICJ2Zy0kbmFtZSIgImx2LSRuYW1lIiAiJHBhdGgiICIkc2l6ZSI7CiAgZG9uZQplbHNlCiAgbG9nICJjb3VudCBub3QgZXF1YWwiCmZpCgpleGl0"


},
...
"properties": {
  "publisher": "Microsoft.Azure.Extensions",
  "type": "CustomScript",
  "typeHandlerVersion": "2.0",
  "autoUpgradeMinorVersion": true,
  "settings": {
  "fileUris": [],
  "commandToExecute": "[concat('while [ ! -f /var/lib/waagent/CustomData ]; do sleep 1; done;sleep 10;cat /var/lib/waagent/CustomData | base64 --decode | sh -s -- ', variables('sizes')[parameters('size')].hana.scriptArguments)]"
}

encode: cat /tmp/sourcefile |base64 -w0 > /tmp/outfile
decode: cat /tmp/outfile |base64 --decode > /tmp/sourcefile

app.sh  - only a logger right now
ascs.sh - logger and package install
hana.sh - logger and create HANA LVM disks
log.sh - only the logger right now
nfs.sh - logger, package install, create disks, setup drbd, setup cluster
